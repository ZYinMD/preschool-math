# config file for Github Actions to serve static site from the dist folder to GitHub Pages

# To find docs on how to do it, first go to the repo on github > settings > pages > Source > Github actions > Static HTML > Configure, it'll show you a template yaml. Then modify it by checking https://vite.dev/guide/static-deploy#github-pages (or just google "vite deploy static sites"). Can also google "pnpm github actions" if encounter pnpm issues.

# Note: it can be live at either (A) zyinmd.github.io/foo (the default) or (B) foo.zyinmd.me (if you configure custom domain), but the two can't work at the same time, due to how github pages serves the content from a sub directory. If you choose A, the aforementioned vite doc will tell you to add an extra "base: /foo/" in vite.config.ts. If you choose B, github pages will redirect traffic from A to B. I chose B because the url looks better and one less extra step in vite config, but the drawback is I can't test it using url A before setting up custom domain because vite config is never set. I can only test with url B which requires the custom domain to be set up first.

name: Deploy static content to Pages

on:
  # Runs on push to main branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # only one job, deploy
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm" # I did this by trial and error, not knowing what it does
      - name: Install dependencies
        run: pnpm install --frozen-lockfile # just "pnpm install" is also fine. I think --frozen-lockfile ensures strick versions per lockfile.
      - name: Build
        run: pnpm run build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist" # upload dist folder
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
